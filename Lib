-- // Minimal GUI Kütüphanesi (Local Gui = loadstring(...) ile açılabilir)

local Gui = {}

-- Hizli Tween fonksiyonu
local TweenService = game:GetService("TweenService")

local function tween(obj, props, duration)
    local tweenInfo = TweenInfo.new(duration or 0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = TweenService:Create(obj, tweenInfo, props)
    tween:Play()
    return tween
end

-- Ana pencere oluşturma
function Gui:CreateWindow(config)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = config.Title or "GuiLib"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, config.Width or 400, 0, config.Height or 300)
    mainFrame.Position = UDim2.new(0.5, -((config.Width or 400)/2), 0.5, -((config.Height or 300)/2))
    mainFrame.BackgroundColor3 = config.BackgroundColor or Color3.fromRGB(30, 30, 30)
    mainFrame.BorderSizePixel = 0
    mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    mainFrame.Parent = screenGui

    -- Yuvarlatılmış köşe
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = mainFrame

    -- Başlık
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Text = config.Title or "GUI Window"
    titleLabel.Size = UDim2.new(1, 0, 0, 30)
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextColor3 = Color3.new(1,1,1)
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextSize = 18
    titleLabel.Parent = mainFrame

    -- İçerik container
    local content = Instance.new("Frame")
    content.Size = UDim2.new(1, -20, 1, -40)
    content.Position = UDim2.new(0, 10, 0, 35)
    content.BackgroundTransparency = 1
    content.Parent = mainFrame

    self.Window = screenGui
    self.MainFrame = mainFrame
    self.Content = content
    self.Elements = {}

    return self
end

-- Button
function Gui:AddButton(text, callback)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, 0, 0, 35)
    btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    btn.Text = text or "Button"
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 16
    btn.AutoButtonColor = false

    -- Yuvarlatma
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = btn

    btn.Parent = self.Content

    -- Animasyonlar
    btn.MouseEnter:Connect(function()
        tween(btn, {BackgroundColor3 = Color3.fromRGB(90, 90, 90)})
    end)
    btn.MouseLeave:Connect(function()
        tween(btn, {BackgroundColor3 = Color3.fromRGB(70, 70, 70)})
    end)

    btn.MouseButton1Click:Connect(function()
        tween(btn, {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}, 0.1):Wait()
        tween(btn, {BackgroundColor3 = Color3.fromRGB(90, 90, 90)}, 0.15)
        if callback then
            pcall(callback)
        end
    end)

    table.insert(self.Elements, btn)
    self:UpdateLayout()
    return btn
end

-- Toggle (açma-kapama)
function Gui:AddToggle(text, default, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 35)
    frame.BackgroundTransparency = 1

    local label = Instance.new("TextLabel")
    label.Text = text or "Toggle"
    label.Size = UDim2.new(0.8, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.Gotham
    label.TextSize = 16
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame

    local toggleBtn = Instance.new("TextButton")
    toggleBtn.Size = UDim2.new(0, 40, 0, 22)
    toggleBtn.Position = UDim2.new(0.85, 0, 0.15, 0)
    toggleBtn.BackgroundColor3 = default and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(60, 60, 60)
    toggleBtn.AutoButtonColor = false
    toggleBtn.Text = ""
    toggleBtn.Parent = frame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = toggleBtn

    local toggled = default or false

    toggleBtn.MouseButton1Click:Connect(function()
        toggled = not toggled
        local color = toggled and Color3.fromRGB(0, 150, 255) or Color3.fromRGB(60, 60, 60)
        tween(toggleBtn, {BackgroundColor3 = color}, 0.2)
        if callback then
            pcall(callback, toggled)
        end
    end)

    frame.Parent = self.Content
    table.insert(self.Elements, frame)
    self:UpdateLayout()
    return frame
end

-- Keybind (tuş atama)
function Gui:AddKeybind(text, defaultKey, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 35)
    frame.BackgroundTransparency = 1

    local label = Instance.new("TextLabel")
    label.Text = text or "Keybind"
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.Gotham
    label.TextSize = 16
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame

    local keyLabel = Instance.new("TextButton")
    keyLabel.Size = UDim2.new(0, 80, 0, 25)
    keyLabel.Position = UDim2.new(0.75, 0, 0.15, 0)
    keyLabel.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    keyLabel.AutoButtonColor = false
    keyLabel.Text = defaultKey.Name or "None"
    keyLabel.TextColor3 = Color3.new(1,1,1)
    keyLabel.Font = Enum.Font.Gotham
    keyLabel.TextSize = 14

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = keyLabel

    local listening = false

    local userInput = game:GetService("UserInputService")

    keyLabel.MouseButton1Click:Connect(function()
        if listening then return end
        listening = true
        keyLabel.Text = "Press a key..."

        local connection
        connection = userInput.InputBegan:Connect(function(input, gameProcessed)
            if gameProcessed then return end
            if input.UserInputType == Enum.UserInputType.Keyboard then
                keyLabel.Text = input.KeyCode.Name
                if callback then
                    pcall(callback, input.KeyCode)
                end
                listening = false
                connection:Disconnect()
            end
        end)
    end)

    keyLabel.Parent = frame
    frame.Parent = self.Content
    table.insert(self.Elements, frame)
    self:UpdateLayout()
    return frame
end

-- Slider
function Gui:AddSlider(text, min, max, default, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 45)
    frame.BackgroundTransparency = 1

    local label = Instance.new("TextLabel")
    label.Text = text or "Slider"
    label.Size = UDim2.new(0.7, 0, 0, 20)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.Gotham
    label.TextSize = 16
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame

    local valueLabel = Instance.new("TextLabel")
    valueLabel.Text = tostring(default or min)
    valueLabel.Size = UDim2.new(0.3, -5, 0, 20)
    valueLabel.Position = UDim2.new(0.7, 0, 0, 0)
    valueLabel.BackgroundTransparency = 1
    valueLabel.TextColor3 = Color3.new(1,1,1)
    valueLabel.Font = Enum.Font.GothamBold
    valueLabel.TextSize = 16
    valueLabel.TextXAlignment = Enum.TextXAlignment.Right
    valueLabel.Parent = frame

    local sliderBar = Instance.new("Frame")
    sliderBar.Size = UDim2.new(1, 0, 0, 10)
    sliderBar.Position = UDim2.new(0, 0, 0, 25)
    sliderBar.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    sliderBar.Parent = frame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = sliderBar

    local sliderFill = Instance.new("Frame")
    sliderFill.Size = UDim2.new(((default or min) - min) / (max - min), 0, 1, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
    sliderFill.Parent = sliderBar

    local fillCorner = Instance.new("UICorner")
    fillCorner.CornerRadius = UDim.new(0, 6)
    fillCorner.Parent = sliderFill

    local dragging = false
    local UserInputService = game:GetService("UserInputService")

    sliderBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
        end
    end)
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            local relativeX = math.clamp(input.Position.X - sliderBar.AbsolutePosition.X, 0, sliderBar.AbsoluteSize.X)
            local value = min + (relativeX / sliderBar.AbsoluteSize.X) * (max - min)
            sliderFill.Size = UDim2.new(relativeX / sliderBar.AbsoluteSize.X, 0, 1, 0)
            valueLabel.Text = string.format("%.2f", value)
            if callback then
                pcall(callback, value)
            end
        end
    end)

    frame.Parent = self.Content
    table.insert(self.Elements, frame)
    self:UpdateLayout()
    return frame
end

-- Textbox
function Gui:AddTextbox(text, placeholder, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 35)
    frame.BackgroundTransparency = 1

    local label = Instance.new("TextLabel")
    label.Text = text or "Textbox"
    label.Size = UDim2.new(0.4, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.Gotham
    label.TextSize = 16
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame

    local textbox = Instance.new("TextBox")
    textbox.Size = UDim2.new(0.55, 0, 1, 0)
    textbox.Position = UDim2.new(0.45, 0, 0, 0)
    textbox.PlaceholderText = placeholder or ""
    textbox.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    textbox.TextColor3 = Color3.new(1,1,1)
    textbox.Font = Enum.Font.Gotham
    textbox.TextSize = 16
    textbox.ClearTextOnFocus = false

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = textbox

    textbox.Parent = frame

    textbox.FocusLost:Connect(function(enterPressed)
        if enterPressed and callback then
            pcall(callback, textbox.Text)
        end
    end)

    frame.Parent = self.Content
    table.insert(self.Elements, frame)
    self:UpdateLayout()
    return frame
end

-- Dropdown
function Gui:AddDropdown(text, options, callback)
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 0, 40)
    frame.BackgroundTransparency = 1

    local label = Instance.new("TextLabel")
    label.Text = text or "Dropdown"
    label.Size = UDim2.new(0.6, 0, 0, 30)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1,1,1)
    label.Font = Enum.Font.Gotham
    label.TextSize = 16
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Parent = frame

    local dropdownBtn = Instance.new("TextButton")
    dropdownBtn.Size = UDim2.new(0.35, 0, 0, 30)
    dropdownBtn.Position = UDim2.new(0.65, 0, 0, 0)
    dropdownBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    dropdownBtn.TextColor3 = Color3.new(1,1,1)
    dropdownBtn.Text = "Select"
    dropdownBtn.Font = Enum.Font.Gotham
    dropdownBtn.TextSize = 14
    dropdownBtn.AutoButtonColor = false

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = dropdownBtn

    dropdownBtn.Parent = frame

    local dropdownOpen = false

    local optionsFrame = Instance.new("ScrollingFrame")
    optionsFrame.Size = UDim2.new(1, 0, 0, 0)
    optionsFrame.Position = UDim2.new(0, 0, 1, 2)
    optionsFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    optionsFrame.BorderSizePixel = 0
    optionsFrame.CanvasSize = UDim2.new(0,0,0,0)
    optionsFrame.ScrollBarThickness = 5
    optionsFrame.Parent = frame

    local corner2 = Instance.new("UICorner")
    corner2.CornerRadius = UDim.new(0, 8)
    corner2.Parent = optionsFrame

    local function toggleDropdown()
        dropdownOpen = not dropdownOpen
        if dropdownOpen then
            local totalHeight = #options * 30
            tween(optionsFrame, {Size = UDim2.new(1, 0, 0, totalHeight)}, 0.25)
        else
            tween(optionsFrame, {Size = UDim2.new(1, 0, 0, 0)}, 0.25)
        end
    end

    dropdownBtn.MouseButton1Click:Connect(toggleDropdown)

    for i, option in ipairs(options) do
        local optBtn = Instance.new("TextButton")
        optBtn.Size = UDim2.new(1, -10, 0, 28)
        optBtn.Position = UDim2.new(0, 5, 0, (i-1)*30)
        optBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
        optBtn.Text = option
        optBtn.TextColor3 = Color3.new(1,1,1)
        optBtn.Font = Enum.Font.Gotham
        optBtn.TextSize = 14
        optBtn.AutoButtonColor = false

        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 6)
        corner.Parent = optBtn

        optBtn.Parent = optionsFrame

        optBtn.MouseEnter:Connect(function()
            tween(optBtn, {BackgroundColor3 = Color3.fromRGB(100, 100, 100)}, 0.15)
        end)
        optBtn.MouseLeave:Connect(function()
            tween(optBtn, {BackgroundColor3 = Color3.fromRGB(80, 80, 80)}, 0.15)
        end)

        optBtn.MouseButton1Click:Connect(function()
            dropdownBtn.Text = option
            toggleDropdown()
            if callback then
                pcall(callback, option)
            end
        end)
    end

    table.insert(self.Elements, frame)
    self:UpdateLayout()
    return frame
end

-- Otomatik eleman dizimi (alt alta)
function Gui:UpdateLayout()
    local y = 0
    for _, element in ipairs(self.Elements) do
        element.Position = UDim2.new(0, 0, 0, y)
        y = y + element.AbsoluteSize.Y + 8
    end
end

return Gui
